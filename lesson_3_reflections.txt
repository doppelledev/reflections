-When would you want to use a remote repository rather than keeping all your work local?
        I would almost always use a remote repository mainly because it's a backup of all the files in my project. Anything
    can happen to my hard drive and I'd lose all the files. Also I'd like to work on projects with other people, and have
    the ability to access my project from another computer.

-Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
		I want to always be ready when the code changes, I don't want it to change while I'm working on it. Also,
	if I know there was a bug in the code, I'd like to fix it first before pulling.

-Describe the differences between forks, clones, and branches. When would you use one instead of another?
		I'd fork an already existing repository, if I want to edit some files in a it and make my own
	version of the project.
		I'd clone a repository to make a local copy of it on my computer.
		I'd branch a commit to implement a new feature or do some experimental work that I don't want to be official yet, after
	I'm sure that I want it to go ofical, I can just merge it with the master branch.

-What is the benefit of having a copy of the last known state of the remote stored locally?
		The benefit is that you'll be able to 'get diff origin/master master' to see what changes have been made in the remote
	repository. You can then solve conflicts if they ever existed.

-How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
		Without using Git ot Github, it would be hard to collaborate with other people, I don't know hwo we would share our code,
	maybe upload it online every single time we make a change? And download other poeple code every time they make a change?
	That would be so inefficient and impractical. Nothing would be easier without Git and Github.

-When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
		I already answered this question like 3 imes now. As I already said, I would make changes to a separate branch because
	I wouldn't want these changes to be official yet, they may contain typos, bugs...etc. After I'm confident my branch is working
	as expected and ready to be officla, I can then merge it to master.